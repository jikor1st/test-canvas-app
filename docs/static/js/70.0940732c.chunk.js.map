{"version":3,"file":"static/js/70.0940732c.chunk.js","mappings":"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","sources":["pages/index-page/index-page.page.tsx","pages/canvas-basic-draw/canvas-basic-draw.page.tsx","lib/utils/canvas/context.util.ts","lib/utils/utils.util.ts","pages/canvas-smooth-draw/canvas-smooth-draw.page.tsx","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","pages/canvas-resize-draw/canvas-resize-draw.page.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst IndexPage = () => {\r\n  return (\r\n    <Container>\r\n      <Box>\r\n        <Title>HTML5 Canvas 테스트</Title>\r\n        <Text>HTML5 Canvas 2D 드로잉을 테스트하는 페이지입니다.</Text>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n`;\r\nconst Box = styled.div`\r\n  padding: 50px 0;\r\n  text-align: center;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 36px;\r\n  line-height: 40px;\r\n  font-weight: bold;\r\n`;\r\nconst Text = styled.p`\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport { IndexPage };\r\n","import { useEffect, useState, useRef, PointerEvent } from 'react';\r\n\r\n// modules\r\nimport { lazily } from 'react-lazily';\r\n\r\n// base-components\r\nconst { BaseCanvas } = lazily(() => import('@/base-components'));\r\n\r\nconst pixelRatio = window.devicePixelRatio > 1 ? 2 : 1;\r\n\r\nconst CanvasBasicDrawPage = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const contextRef = useRef<CanvasRenderingContext2D | null>(null);\r\n\r\n  const [isDown, setIsDown] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    initCanvas();\r\n  }, []);\r\n\r\n  const canvasSizeSetting = (\r\n    canvasElement: HTMLCanvasElement,\r\n    target: Window | HTMLElement,\r\n  ) => {\r\n    let width = 0;\r\n    let height = 0;\r\n    if (target === window) {\r\n      const { innerWidth, innerHeight } = target as Window;\r\n      width = innerWidth;\r\n      height = innerHeight;\r\n    } else {\r\n      const { clientWidth, clientHeight } = target as HTMLElement;\r\n      width = clientWidth;\r\n      height = clientHeight;\r\n    }\r\n    canvasElement.width = width * pixelRatio;\r\n    canvasElement.height = height * pixelRatio;\r\n  };\r\n  const canvasContextSetting = (canvasElement: HTMLCanvasElement) => {\r\n    const getContext = canvasElement.getContext('2d');\r\n\r\n    if (!getContext) return;\r\n    getContext.scale(pixelRatio, pixelRatio);\r\n    getContext.lineCap = 'round';\r\n    getContext.strokeStyle = 'black';\r\n    getContext.lineWidth = 5;\r\n    contextRef.current = getContext;\r\n  };\r\n\r\n  const initCanvas = () => {\r\n    if (!canvasRef.current) return;\r\n    const canvasEl = canvasRef.current;\r\n    canvasSizeSetting(canvasEl, window);\r\n    canvasContextSetting(canvasEl);\r\n  };\r\n\r\n  const handlePointerDown = ({ nativeEvent }: PointerEvent) => {\r\n    setIsDown(true);\r\n\r\n    const context = contextRef.current;\r\n    if (!context) return;\r\n\r\n    const { offsetX, offsetY } = nativeEvent;\r\n\r\n    context.beginPath();\r\n    context.moveTo(offsetX, offsetY);\r\n  };\r\n\r\n  const handlePointerMove = ({ nativeEvent }: PointerEvent) => {\r\n    if (!isDown) return;\r\n\r\n    const context = contextRef.current;\r\n    if (!context) return;\r\n\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    context.lineTo(offsetX, offsetY);\r\n    context.stroke();\r\n  };\r\n\r\n  const handlePointerUp = () => {\r\n    setIsDown(false);\r\n    const context = contextRef.current;\r\n    if (!context) return;\r\n    context.closePath();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BaseCanvas\r\n        ref={canvasRef}\r\n        onPointerDown={handlePointerDown}\r\n        onPointerMove={handlePointerMove}\r\n        onPointerUp={handlePointerUp}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CanvasBasicDrawPage };\r\n","type ObjectXYType = { x: number; y: number };\r\ntype ContextDotOptionsType = { x: number; y: number; radius: number };\r\ntype ContextLineWithQuadrationOptionsType = {\r\n  points: ObjectXYType[];\r\n};\r\n\r\nfunction pixelRatio(): number {\r\n  return window.devicePixelRatio > 1 ? 2 : 1;\r\n}\r\n\r\nfunction objectXY(x: number, y: number): ObjectXYType {\r\n  return { x: x, y: y };\r\n}\r\n\r\nfunction drawDot(\r\n  context: CanvasRenderingContext2D,\r\n  { x, y, radius }: ContextDotOptionsType,\r\n): void {\r\n  context.beginPath();\r\n  context.arc(x, y, radius, 0, Math.PI * 2, !0);\r\n  context.fill();\r\n  context.closePath();\r\n}\r\n\r\nfunction drawLineCurve(\r\n  context: CanvasRenderingContext2D,\r\n  { points }: ContextLineWithQuadrationOptionsType,\r\n): void {\r\n  context.beginPath();\r\n  context.moveTo(points[0].x, points[0].y);\r\n\r\n  for (let i = 1, len = points.length; i < len - 2; i++) {\r\n    const cpx = points[i].x;\r\n    const cpy = points[i].y;\r\n    const x = (cpx + points[i + 1].x) / 2;\r\n    const y = (cpy + points[i + 1].y) / 2;\r\n\r\n    context.quadraticCurveTo(cpx, cpy, x, y);\r\n  }\r\n\r\n  context.stroke();\r\n}\r\n\r\nconst contextUtils = {\r\n  pixelRatio,\r\n  objectXY,\r\n  drawDot,\r\n  drawLineCurve,\r\n};\r\n\r\nexport { contextUtils };\r\nexport type {};\r\n","import { contextUtils } from './canvas';\r\nconst utils = {\r\n  context: { ...contextUtils },\r\n};\r\n\r\nexport { utils };\r\n","import { useEffect, useState, useRef, PointerEvent, Suspense } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// modules\r\nimport { lazily } from 'react-lazily';\r\n\r\n// utils\r\nimport { utils } from '@/lib/utils';\r\n\r\n// base-components\r\nconst { BaseCanvas } = lazily(() => import('@/base-components'));\r\n\r\nconst pixelRatio = window.devicePixelRatio > 1 ? 2 : 1;\r\ntype pointType = { x: number; y: number };\r\n\r\nconst CanvasSmoothDrawPage = () => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const contextRef = useRef<CanvasRenderingContext2D>();\r\n  const canvasInformRef = useRef({ width: 0, height: 0 });\r\n  const pptsRef = useRef<pointType[]>([]);\r\n\r\n  const [isDown, setIsDown] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    initCanvas();\r\n  }, []);\r\n\r\n  const canvasSizeSetting = (\r\n    canvasElement: HTMLCanvasElement,\r\n    target: Window | HTMLElement,\r\n  ) => {\r\n    let width = 0;\r\n    let height = 0;\r\n    if (target === window) {\r\n      const { innerWidth, innerHeight } = target as Window;\r\n      width = innerWidth;\r\n      height = innerHeight;\r\n    } else {\r\n      const { offsetWidth, offsetHeight } = target as HTMLElement;\r\n      width = offsetWidth;\r\n      height = offsetHeight;\r\n    }\r\n\r\n    const resultWidth = width * pixelRatio;\r\n    const resultHeight = height * pixelRatio;\r\n    canvasElement.width = resultWidth;\r\n    canvasElement.height = resultHeight;\r\n    canvasInformRef.current = { width: resultWidth, height: resultHeight };\r\n  };\r\n  const canvasContextSetting = (canvasElement: HTMLCanvasElement) => {\r\n    const getContext = canvasElement.getContext('2d');\r\n\r\n    if (!getContext) return;\r\n\r\n    getContext.scale(pixelRatio, pixelRatio);\r\n    getContext.lineCap = 'round';\r\n    getContext.strokeStyle = 'black';\r\n    getContext.lineWidth = 3;\r\n    contextRef.current = getContext;\r\n  };\r\n\r\n  const initCanvas = () => {\r\n    if (!canvasRef.current || !containerRef.current) return;\r\n    const canvasEl = canvasRef.current;\r\n    const containerEl = containerRef.current;\r\n    canvasSizeSetting(canvasEl, containerEl);\r\n    canvasContextSetting(canvasEl);\r\n  };\r\n\r\n  const handlePointerDown = ({ nativeEvent }: PointerEvent) => {\r\n    if (!contextRef.current) return;\r\n    setIsDown(true);\r\n\r\n    const { offsetX, offsetY } = nativeEvent;\r\n\r\n    utils.context.drawDot(contextRef.current, {\r\n      x: offsetX,\r\n      y: offsetY,\r\n      radius: contextRef.current.lineWidth / 2,\r\n    });\r\n\r\n    pptsRef.current.push({ x: offsetX, y: offsetY });\r\n  };\r\n\r\n  const handlePointerMove = ({ nativeEvent }: PointerEvent) => {\r\n    if (!isDown || !contextRef.current) return;\r\n\r\n    const { offsetX, offsetY } = nativeEvent;\r\n\r\n    const ppts = pptsRef.current;\r\n    ppts.push({ x: offsetX, y: offsetY });\r\n\r\n    utils.context.drawLineCurve(contextRef.current, { points: ppts });\r\n  };\r\n\r\n  const handlePointerUp = () => {\r\n    setIsDown(false);\r\n    pptsRef.current = [];\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <CanvasWrap ref={containerRef}>\r\n        <Suspense fallback={<div>캔버스 불러오는중...</div>}>\r\n          <BaseCanvas\r\n            ref={canvasRef}\r\n            onPointerDown={handlePointerDown}\r\n            onPointerMove={handlePointerMove}\r\n            onPointerUp={handlePointerUp}\r\n          />\r\n        </Suspense>\r\n      </CanvasWrap>\r\n    </Container>\r\n  );\r\n};\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst CanvasWrap = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 0;\r\n`;\r\n\r\nexport { CanvasSmoothDrawPage };\r\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","import {\r\n  useEffect,\r\n  useState,\r\n  useRef,\r\n  MouseEvent,\r\n  TouchEvent,\r\n  PointerEvent,\r\n  Suspense,\r\n} from 'react';\r\nimport PolyfillResizeObserver from 'resize-observer-polyfill';\r\nimport styled from 'styled-components';\r\n\r\n// modules\r\nimport { lazily } from 'react-lazily';\r\n\r\n// utils\r\nimport { utils } from '@/lib/utils';\r\n\r\n// base-components\r\nconst { BaseCanvas } = lazily(() => import('@/base-components'));\r\n\r\ntype pointType = { x: number; y: number };\r\n\r\nconst CanvasResizeDrawPage = () => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const contextRef = useRef<CanvasRenderingContext2D>();\r\n  const canvasInformRef = useRef({\r\n    width: 0,\r\n    height: 0,\r\n    pixelRatio: utils.context.pixelRatio(),\r\n  });\r\n  const pptsRef = useRef<pointType[]>([]);\r\n\r\n  const ContainerResizeObserverRef = useRef<ResizeObserver>();\r\n\r\n  const [isDown, setIsDown] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    init();\r\n    initObserver();\r\n\r\n    return () => {\r\n      if (!ContainerResizeObserverRef.current || !containerRef.current) return;\r\n      ContainerResizeObserverRef.current.unobserve(containerRef.current);\r\n      ContainerResizeObserverRef.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const canvasSizeSetting = (width: number, height: number) => {\r\n    if (!canvasRef.current) return;\r\n\r\n    const resultWidth = width * canvasInformRef.current.pixelRatio;\r\n    const resultHeight = height * canvasInformRef.current.pixelRatio;\r\n    canvasRef.current.width = resultWidth;\r\n    canvasRef.current.height = resultHeight;\r\n    canvasInformRef.current.width = resultWidth;\r\n    canvasInformRef.current.height = resultHeight;\r\n  };\r\n\r\n  const canvasContextSetting = (context: CanvasRenderingContext2D) => {\r\n    if (!context) return;\r\n    context.scale(\r\n      canvasInformRef.current.pixelRatio,\r\n      canvasInformRef.current.pixelRatio,\r\n    );\r\n    context.lineCap = 'round';\r\n    context.strokeStyle = 'black';\r\n    context.lineWidth = 3;\r\n    contextRef.current = context;\r\n  };\r\n\r\n  const init = () => {\r\n    if (!canvasRef.current || !containerRef.current) return;\r\n    const { clientWidth, clientHeight } = containerRef.current;\r\n    canvasSizeSetting(clientWidth, clientHeight);\r\n    const getContext = canvasRef.current.getContext('2d');\r\n    if (!getContext) return;\r\n    canvasContextSetting(getContext);\r\n  };\r\n\r\n  const initObserver = () => {\r\n    if (!containerRef.current) return;\r\n    ContainerResizeObserverRef.current = window.ResizeObserver\r\n      ? new ResizeObserver(entries => {\r\n          for (let entry of entries) {\r\n            if (entry.contentBoxSize) {\r\n              const contentBoxSize = Array.isArray(entry.contentBoxSize)\r\n                ? entry.contentBoxSize[0]\r\n                : entry.contentBoxSize;\r\n              if (contextRef.current) {\r\n                canvasInformRef.current.pixelRatio = utils.context.pixelRatio();\r\n                const temp = contextRef.current.getImageData(\r\n                  0,\r\n                  0,\r\n                  canvasInformRef.current.width,\r\n                  canvasInformRef.current.height,\r\n                );\r\n                canvasSizeSetting(\r\n                  contentBoxSize.inlineSize,\r\n                  contentBoxSize.blockSize,\r\n                );\r\n                canvasContextSetting(contextRef.current);\r\n                contextRef.current.putImageData(temp, 0, 0);\r\n              }\r\n            }\r\n          }\r\n        })\r\n      : new PolyfillResizeObserver(entries => {});\r\n    ContainerResizeObserverRef.current.observe(containerRef.current);\r\n  };\r\n\r\n  const handlePointerDown = ({ nativeEvent }: PointerEvent) => {\r\n    if (!contextRef.current) return;\r\n    setIsDown(true);\r\n\r\n    const { offsetX, offsetY } = nativeEvent;\r\n\r\n    utils.context.drawDot(contextRef.current, {\r\n      x: offsetX,\r\n      y: offsetY,\r\n      radius: contextRef.current.lineWidth / 2,\r\n    });\r\n\r\n    pptsRef.current.push({ x: offsetX, y: offsetY });\r\n  };\r\n\r\n  const handlePointerMove = ({ nativeEvent }: PointerEvent) => {\r\n    if (!isDown || !contextRef.current) return;\r\n    const { offsetX, offsetY } = nativeEvent;\r\n\r\n    const ppts = pptsRef.current;\r\n    ppts.push({ x: offsetX, y: offsetY });\r\n\r\n    utils.context.drawLineCurve(contextRef.current, { points: ppts });\r\n  };\r\n\r\n  const handlePointerUp = () => {\r\n    setIsDown(false);\r\n    pptsRef.current = [];\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <CanvasWrap ref={containerRef}>\r\n        <Suspense fallback={<div>캔버스 불러오는중...</div>}>\r\n          <BaseCanvas\r\n            ref={canvasRef}\r\n            onPointerDown={handlePointerDown}\r\n            onPointerMove={handlePointerMove}\r\n            onPointerUp={handlePointerUp}\r\n          />\r\n        </Suspense>\r\n      </CanvasWrap>\r\n    </Container>\r\n  );\r\n};\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nconst CanvasWrap = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 0;\r\n  position: relative;\r\n`;\r\n\r\nexport { CanvasResizeDrawPage };\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["IndexPage","Container","Box","Title","Text","styled","BaseCanvas","lazily","pixelRatio","window","devicePixelRatio","CanvasBasicDrawPage","canvasRef","useRef","contextRef","useState","isDown","setIsDown","useEffect","initCanvas","current","canvasEl","canvasElement","target","width","height","innerWidth","innerHeight","clientWidth","clientHeight","canvasSizeSetting","getContext","scale","lineCap","strokeStyle","lineWidth","canvasContextSetting","ref","onPointerDown","nativeEvent","context","offsetX","offsetY","beginPath","moveTo","onPointerMove","lineTo","stroke","onPointerUp","closePath","contextUtils","objectXY","x","y","drawDot","radius","arc","Math","PI","fill","drawLineCurve","points","i","len","length","cpx","cpy","quadraticCurveTo","utils","CanvasSmoothDrawPage","containerRef","canvasInformRef","pptsRef","offsetWidth","offsetHeight","resultWidth","resultHeight","CanvasWrap","Suspense","fallback","push","ppts","MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","this","__entries__","Object","defineProperty","prototype","get","enumerable","configurable","set","value","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","call","isBrowser","document","global$1","global","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","props","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getHTMLElementContentRect","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","create","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","apply","CanvasResizeDrawPage","ContainerResizeObserverRef","init","initObserver","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","err","normalCompletion","didErr","step","next","_e2","contentBoxSize","temp","getImageData","inlineSize","blockSize","putImageData","PolyfillResizeObserver","_defineProperty","obj","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","source","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}